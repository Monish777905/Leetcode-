int jump(int* nums, int numsSize) {
    if(numsSize == 1) return 0;
    // if(nums[0] >= numsSize) return 1;
    int step = 0, idx = 0;
    int* dp = (int*)calloc(numsSize + 1, sizeof(int));
    // int dp[numsSize] = {0};
    dp[0] = nums[0];
    int t;
    numsSize -= 1; 
    while(idx < numsSize){
        if(dp[step] >= numsSize-idx){
            printf("aaa");
            return step + 1;
        }
        else if(dp[step] == 0){
            printf("bbb. %d. %d, %d\n", idx, step, nums[idx]);
            return -1;
        }
        else{
            dp[step+1] = dp[step];
            t = 0;
            // 照當前步數可以到的最遠下一步
            for(int i = 1; i <= nums[idx]; i++){
                if(i + nums[idx+i] > dp[step+1] + t){
                    dp[step+1] =  nums[idx + i];
                    t = i;
                }
            }
            idx += t; //移動到下一個位置 
            step += 1;
            printf("ccc. %d. %d, %d\n", idx, step, dp[step]);
        }
    }
    free(dp);
    return step;
}
